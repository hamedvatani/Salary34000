// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Salary34000.Data;

#nullable disable

namespace Salary34000.Migrations
{
    [DbContext(typeof(SalaryContext))]
    [Migration("20230220113310_MaliFields")]
    partial class MaliFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("Salary34000.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "زیر دیپلم",
                            Score = 2
                        },
                        new
                        {
                            Id = 2,
                            Description = "دیپلم",
                            Score = 4
                        },
                        new
                        {
                            Id = 3,
                            Description = "فوق دیپلم",
                            Score = 6
                        },
                        new
                        {
                            Id = 4,
                            Description = "کارشناسی",
                            Score = 8
                        },
                        new
                        {
                            Id = 5,
                            Description = "کارشناسی ارشد",
                            Score = 10
                        },
                        new
                        {
                            Id = 6,
                            Description = "دکتری",
                            Score = 10
                        });
                });

            modelBuilder.Entity("Salary34000.Models.EducationRelationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Coefficient")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EducationRelationStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coefficient = 1.0,
                            Description = "مرتبط"
                        },
                        new
                        {
                            Id = 2,
                            Coefficient = 0.84999999999999998,
                            Description = "نیمه مرتبط"
                        },
                        new
                        {
                            Id = 3,
                            Coefficient = 0.69999999999999996,
                            Description = "غیر مرتبط"
                        });
                });

            modelBuilder.Entity("Salary34000.Models.EmploymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EmploymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "رسمی"
                        },
                        new
                        {
                            Id = 2,
                            Description = "قرارداد پاره‌وقت"
                        },
                        new
                        {
                            Id = 3,
                            Description = "قرارداد تمام‌وقت"
                        });
                });

            modelBuilder.Entity("Salary34000.Models.JobGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("JobGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "4"
                        },
                        new
                        {
                            Id = 5,
                            Description = "5"
                        },
                        new
                        {
                            Id = 6,
                            Description = "6"
                        },
                        new
                        {
                            Id = 7,
                            Description = "7"
                        },
                        new
                        {
                            Id = 8,
                            Description = "8"
                        },
                        new
                        {
                            Id = 9,
                            Description = "9"
                        },
                        new
                        {
                            Id = 10,
                            Description = "10"
                        },
                        new
                        {
                            Id = 11,
                            Description = "11"
                        },
                        new
                        {
                            Id = 12,
                            Description = "12"
                        },
                        new
                        {
                            Id = 13,
                            Description = "13"
                        },
                        new
                        {
                            Id = 14,
                            Description = "14"
                        },
                        new
                        {
                            Id = 15,
                            Description = "15"
                        },
                        new
                        {
                            Id = 16,
                            Description = "16"
                        },
                        new
                        {
                            Id = 17,
                            Description = "17"
                        },
                        new
                        {
                            Id = 18,
                            Description = "18"
                        },
                        new
                        {
                            Id = 19,
                            Description = "19"
                        },
                        new
                        {
                            Id = 20,
                            Description = "20"
                        },
                        new
                        {
                            Id = 21,
                            Description = "A"
                        },
                        new
                        {
                            Id = 22,
                            Description = "B"
                        },
                        new
                        {
                            Id = 23,
                            Description = "C"
                        },
                        new
                        {
                            Id = 24,
                            Description = "D"
                        },
                        new
                        {
                            Id = 25,
                            Description = "E"
                        });
                });

            modelBuilder.Entity("Salary34000.Models.MilitaryService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MilitaryServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "پروژه نخبه وظیفه"
                        },
                        new
                        {
                            Id = 2,
                            Description = "در حال انجام"
                        },
                        new
                        {
                            Id = 3,
                            Description = "کارت پایان خدمت"
                        },
                        new
                        {
                            Id = 4,
                            Description = "کارت معافیت "
                        },
                        new
                        {
                            Id = 5,
                            Description = "معافیت پزشکی"
                        },
                        new
                        {
                            Id = 6,
                            Description = "معافیت تحصیلی"
                        },
                        new
                        {
                            Id = 7,
                            Description = "معافیت دائم"
                        },
                        new
                        {
                            Id = 8,
                            Description = "معافیت زیر پرچم"
                        },
                        new
                        {
                            Id = 9,
                            Description = "معافیت کفالت"
                        },
                        new
                        {
                            Id = 10,
                            Description = "معافیت موارد خاص"
                        });
                });

            modelBuilder.Entity("Salary34000.Models.Occupation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Coefficient")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Occupations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coefficient = 2.7999999999999998,
                            Description = "صف تخصصی - فنی"
                        },
                        new
                        {
                            Id = 2,
                            Coefficient = 2.0,
                            Description = "صف تخصصی - فنی 1"
                        },
                        new
                        {
                            Id = 3,
                            Coefficient = 1.5,
                            Description = "صف تخصصی - فنی 2"
                        },
                        new
                        {
                            Id = 4,
                            Coefficient = 1.2,
                            Description = "صف تخصصی - فنی 3"
                        },
                        new
                        {
                            Id = 5,
                            Coefficient = 2.5,
                            Description = "صف تخصصی - پشتیبانی"
                        },
                        new
                        {
                            Id = 6,
                            Coefficient = 1.7,
                            Description = "صف تخصصی - پشتیبانی 1"
                        },
                        new
                        {
                            Id = 7,
                            Coefficient = 1.25,
                            Description = "صف تخصصی - پشتیبانی 2"
                        },
                        new
                        {
                            Id = 8,
                            Coefficient = 1.2,
                            Description = "صف تخصصی - پشتیبانی 3"
                        },
                        new
                        {
                            Id = 9,
                            Coefficient = 1.1000000000000001,
                            Description = "ستاد تخصصی"
                        },
                        new
                        {
                            Id = 10,
                            Coefficient = 1.05,
                            Description = "ستاد پشتیبانی"
                        },
                        new
                        {
                            Id = 11,
                            Coefficient = 1.0,
                            Description = "ستاد خدماتی"
                        });
                });

            modelBuilder.Entity("Salary34000.Models.OrganizationUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OrganizationUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "مدیریت پشتیبانی و خدمات"
                        },
                        new
                        {
                            Id = 2,
                            Description = "حوزه مدیر عامل"
                        },
                        new
                        {
                            Id = 3,
                            Description = "مدیریت حراست"
                        },
                        new
                        {
                            Id = 4,
                            Description = "مدیریت تدارکات"
                        },
                        new
                        {
                            Id = 5,
                            Description = "گروه فناوین"
                        },
                        new
                        {
                            Id = 6,
                            Description = "گروه پایش"
                        },
                        new
                        {
                            Id = 7,
                            Description = "گروه جم"
                        },
                        new
                        {
                            Id = 8,
                            Description = "گروه ارگ"
                        },
                        new
                        {
                            Id = 9,
                            Description = "گروه حافظ"
                        },
                        new
                        {
                            Id = 10,
                            Description = "مدیریت منابع انسانی "
                        },
                        new
                        {
                            Id = 11,
                            Description = "مدیریت مالی"
                        },
                        new
                        {
                            Id = 12,
                            Description = "گروه بصیر"
                        },
                        new
                        {
                            Id = 13,
                            Description = "مدیریت بازرگانی"
                        },
                        new
                        {
                            Id = 14,
                            Description = "گروه آفاق"
                        },
                        new
                        {
                            Id = 15,
                            Description = "مدیریت برنامه ریزی و نظارت"
                        },
                        new
                        {
                            Id = 16,
                            Description = "گروه فناوری و شتابدهی برنا"
                        },
                        new
                        {
                            Id = 17,
                            Description = "شیخ بهایی"
                        },
                        new
                        {
                            Id = 18,
                            Description = "گروه پویش"
                        },
                        new
                        {
                            Id = 19,
                            Description = "گروه ماهان"
                        },
                        new
                        {
                            Id = 20,
                            Description = "مدیریت فاوا"
                        },
                        new
                        {
                            Id = 21,
                            Description = "مدیریت تدارکات"
                        });
                });

            modelBuilder.Entity("Salary34000.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BirthCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChildrenCount")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ConsolidatedInsurance")
                        .HasColumnType("REAL");

                    b.Property<string>("DocumentCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentSerial")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("EducationAverage")
                        .HasColumnType("REAL");

                    b.Property<string>("EducationField")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EducationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EducationPlace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EducationRelationStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EmploymentEndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmploymentTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("MarriageDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MilitaryServiceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OccupationId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OldBaseSummery")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OldHokmSummery")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrganizationPost")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PersonelCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProfessionalPathId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SuperCollectable")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("EducationRelationStatusId");

                    b.HasIndex("EmploymentTypeId");

                    b.HasIndex("JobGroupId");

                    b.HasIndex("MilitaryServiceId");

                    b.HasIndex("OccupationId");

                    b.HasIndex("OrganizationUnitId");

                    b.HasIndex("ProfessionalPathId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Salary34000.Models.ProfessionalPath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Coefficient")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProfessionalPaths");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 33218504L,
                            Coefficient = 1.0,
                            Description = "مدیریتی"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 16609252L,
                            Coefficient = 0.5,
                            Description = "کارشناسی"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 11072835L,
                            Coefficient = 0.33000000000000002,
                            Description = "کاردانی"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 8304626L,
                            Coefficient = 0.25,
                            Description = "کارمندی"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 6643701L,
                            Coefficient = 0.20000000000000001,
                            Description = "کارگری"
                        });
                });

            modelBuilder.Entity("Salary34000.Models.Person", b =>
                {
                    b.HasOne("Salary34000.Models.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Salary34000.Models.EducationRelationStatus", "EducationRelationStatus")
                        .WithMany()
                        .HasForeignKey("EducationRelationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Salary34000.Models.EmploymentType", "EmploymentType")
                        .WithMany()
                        .HasForeignKey("EmploymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Salary34000.Models.JobGroup", "JobGroup")
                        .WithMany()
                        .HasForeignKey("JobGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Salary34000.Models.MilitaryService", "MilitaryService")
                        .WithMany()
                        .HasForeignKey("MilitaryServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Salary34000.Models.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Salary34000.Models.OrganizationUnit", "OrganizationUnit")
                        .WithMany()
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Salary34000.Models.ProfessionalPath", "ProfessionalPath")
                        .WithMany()
                        .HasForeignKey("ProfessionalPathId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("EducationRelationStatus");

                    b.Navigation("EmploymentType");

                    b.Navigation("JobGroup");

                    b.Navigation("MilitaryService");

                    b.Navigation("Occupation");

                    b.Navigation("OrganizationUnit");

                    b.Navigation("ProfessionalPath");
                });
#pragma warning restore 612, 618
        }
    }
}
