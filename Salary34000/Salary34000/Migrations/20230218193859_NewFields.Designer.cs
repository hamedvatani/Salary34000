// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Salary34000.Data;

#nullable disable

namespace Salary34000.Migrations
{
    [DbContext(typeof(SalaryContext))]
    [Migration("20230218193859_NewFields")]
    partial class NewFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("Salary34000.Models.EmploymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EmploymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "رسمی"
                        },
                        new
                        {
                            Id = 2,
                            Description = "قرارداد پاره‌وقت"
                        },
                        new
                        {
                            Id = 3,
                            Description = "قرارداد تمام‌وقت"
                        });
                });

            modelBuilder.Entity("Salary34000.Models.OrganizationUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OrganizationUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "مدیریت پشتیبانی و خدمات"
                        },
                        new
                        {
                            Id = 2,
                            Description = "حوزه مدیر عامل"
                        },
                        new
                        {
                            Id = 3,
                            Description = "مدیریت حراست"
                        },
                        new
                        {
                            Id = 4,
                            Description = "مدیریت تدارکات"
                        },
                        new
                        {
                            Id = 5,
                            Description = "گروه فناوین"
                        },
                        new
                        {
                            Id = 6,
                            Description = "گروه پایش"
                        },
                        new
                        {
                            Id = 7,
                            Description = "گروه جم"
                        },
                        new
                        {
                            Id = 8,
                            Description = "گروه ارگ"
                        },
                        new
                        {
                            Id = 9,
                            Description = "گروه حافظ"
                        },
                        new
                        {
                            Id = 10,
                            Description = "مدیریت منابع انسانی "
                        },
                        new
                        {
                            Id = 11,
                            Description = "مدیریت مالی"
                        },
                        new
                        {
                            Id = 12,
                            Description = "گروه بصیر"
                        },
                        new
                        {
                            Id = 13,
                            Description = "مدیریت بازرگانی"
                        },
                        new
                        {
                            Id = 14,
                            Description = "گروه آفاق"
                        },
                        new
                        {
                            Id = 15,
                            Description = "مدیریت برنامه ریزی و نظارت"
                        },
                        new
                        {
                            Id = 16,
                            Description = "گروه فناوری و شتابدهی برنا"
                        },
                        new
                        {
                            Id = 17,
                            Description = "شیخ بهایی"
                        },
                        new
                        {
                            Id = 18,
                            Description = "گروه پویش"
                        },
                        new
                        {
                            Id = 19,
                            Description = "گروه ماهان"
                        },
                        new
                        {
                            Id = 20,
                            Description = "مدیریت فاوا"
                        },
                        new
                        {
                            Id = 21,
                            Description = "مدیریت تدارکات"
                        });
                });

            modelBuilder.Entity("Salary34000.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BirthCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChildrenCount")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ConsolidatedInsurance")
                        .HasColumnType("REAL");

                    b.Property<string>("DocumentCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentSerial")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmploymentTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OrganizationPost")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PersonelCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentTypeId");

                    b.HasIndex("OrganizationUnitId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Salary34000.Models.Person", b =>
                {
                    b.HasOne("Salary34000.Models.EmploymentType", "EmploymentType")
                        .WithMany()
                        .HasForeignKey("EmploymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Salary34000.Models.OrganizationUnit", "OrganizationUnit")
                        .WithMany()
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmploymentType");

                    b.Navigation("OrganizationUnit");
                });
#pragma warning restore 612, 618
        }
    }
}
